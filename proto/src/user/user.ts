/**
* This file is auto-generated by nestjs-proto-gen-ts
*/

import { Observable } from 'rxjs';
import { Metadata } from '@grpc/grpc-js';

export namespace user {
    export interface UserService {
        findUserById(
            data: google.protobuf.Int32Value,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<User>;
    }
    export interface User {
        id?: number;
        name?: string;
        email?: string;
        providerId?: number;
        provider?: auth.PROVIDER;
    }
}
export namespace google {
    export namespace protobuf {
        export interface DoubleValue {
            value?: number;
        }
        export interface FloatValue {
            value?: number;
        }
        export interface Int64Value {
            value?: number;
        }
        export interface UInt64Value {
            value?: number;
        }
        export interface Int32Value {
            value?: number;
        }
        export interface UInt32Value {
            value?: number;
        }
        export interface BoolValue {
            value?: boolean;
        }
        export interface StringValue {
            value?: string;
        }
        export interface BytesValue {
            value?: Uint8Array;
        }
    }
}
export namespace auth {
    export interface AuthService {
        verifyToken(
            data: google.protobuf.StringValue,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<google.protobuf.BoolValue>;
        generateToken(
            data: OAuthProfile,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<Token>;
        getOAuthProfile(
            data: OAuthRequest,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<OAuthProfile>;
    }
    export interface Token {
        accessToken?: string;
        refreshToken?: string;
    }
    export interface TokenPayload {
        id?: number;
        name?: string;
        email?: string;
        provider?: auth.PROVIDER;
    }
    export enum PROVIDER {
        GOOGLE = 0,
    }
    export interface OAuthRequest {
        code?: string;
        redirect?: string;
        callback?: string;
        provider?: auth.PROVIDER;
    }
    export interface OAuthProfile {
        provider?: auth.PROVIDER;
        providerId?: number;
        email?: string;
        name?: string;
    }
    export interface OAuthState {
        redirect?: string;
        callback?: string;
        provider?: auth.PROVIDER;
    }
}

